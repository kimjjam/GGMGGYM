// server/src/routes/workouts.ts
import { Router } from "express";
import Workout from "../models/Workout";

const r = Router();

/** -------------------------------------------
 *  시드 데이터 (부위 × 난이도 대량)
 *  - title, group, difficulty 로 구성
 *  - id 는 제목/그룹/난이도로 슬러그 생성
 * ------------------------------------------*/
type Difficulty = "easy" | "mid" | "hard";
type Group = "back" | "shoulder" | "chest" | "legs" | "arm"; // 팔 기준

const slug = (s: string) =>
  s
    .toLowerCase()
    .replace(/[()]/g, "")
    .replace(/[^a-z0-9가-힣\s\-]/g, "")
    .replace(/\s+/g, "-")
    .replace(/\-+/g, "-")
    .replace(/^-|-$/g, "");

const RAW: Record<Difficulty, Record<Group, string[]>> = {
  easy: {
    back: [
      "밴드 풀업(Assisted Pull-Up)",
      "라트 풀다운(Lat Pulldown)",
      "시티드 케이블 로우",
      "체스트 서포티드 로우",
      "머신 로우",
      "스트레이트 암 풀다운",
      "원암 덤벨 로우(라이트)",
      "밴드 로우",
      "페이스풀(후면/등)",
      "백 익스텐션",
      "리버스 하이퍼(라이트)",
      "수퍼맨(Superman)",
    ],
    shoulder: [
      "덤벨 숄더 프레스(라이트)",
      "머신 숄더 프레스(라이트)",
      "덤벨 레터럴 레이즈",
      "케이블 레터럴 레이즈",
      "프론트 레이즈",
      "리어델트 플라이(DB)",
      "리버스 펙덱(라이트)",
      "페이스풀(어깨)",
      "랜드마인 프레스(라이트)",
      "Y-레이즈",
      "스캡션 레이즈",
      "아놀드 프레스(라이트)",
    ],
    chest: [
      "머신 체스트 프레스(라이트)",
      "스미스 벤치프레스(라이트)",
      "인클라인 덤벨 프레스(라이트)",
      "덤벨 벤치프레스(라이트)",
      "펙덱 플라이(라이트)",
      "케이블 플라이(로우)",
      "케이블 플라이(하이)",
      "인클라인 푸쉬업",
      "니 푸쉬업(무릎)",
      "덤벨 풀오버(라이트)",
      "랜드마인 프레스(체스트)",
      "어시스트 딥스(라이트)",
    ],
    legs: [
      "바디웨이트 스쿼트",
      "고블릿 스쿼트(라이트)",
      "레그프레스(라이트)",
      "레그 익스텐션(라이트)",
      "시티드 레그컬(라이트)",
      "라잉 레그컬(라이트)",
      "힙 쓰러스트(라이트)",
      "글루트 브리지",
      "스텝업(낮은 박스)",
      "스플릿 스쿼트(보조잡고)",
      "힙 어브덕션 머신",
      "스탠딩 카프레이즈(라이트)",
    ],
    arm: [
      "덤벨 컬(라이트)",
      "해머 컬(라이트)",
      "케이블 컬(로프)",
      "컨센트레이션 컬",
      "프리쳐 컬 머신(라이트)",
      "리버스 컬(라이트)",
      "트라이셉스 로프 푸쉬다운(라이트)",
      "오버헤드 로프 익스텐션(라이트)",
      "덤벨 킥백",
      "클로즈그립 푸쉬업",
      "원암 케이블 컬",
      "리스트 컬",
    ],
  },
  mid: {
    back: [
      "풀업(중립그립)",
      "바벨 로우(Bent-Over Row)",
      "덤벨 로우",
      "티바 로우(T-Bar Row)",
      "라트 풀다운(와이드)",
      "시티드 로우(내로우)",
      "메도우즈 로우(중량 보통)",
      "펜들레이 로우(보통)",
      "씰 로우(보통)",
      "데드리프트(보통)",
      "루마니안 데드리프트(RDL)",
      "랙풀(보통)",
    ],
    shoulder: [
      "바벨 오버헤드 프레스",
      "덤벨 숄더 프레스(중량)",
      "아놀드 프레스(중량)",
      "레터럴 레이즈(중량)",
      "업라이트 로우(EZ)",
      "리버스 펙덱(중량)",
      "케이블 레터럴(풀레인지)",
      "랜드마인 프레스(싱글암)",
      "시티드 DB 클린",
      "큐반 프레스",
      "푸시 프레스(중량)",
      "Y-프레스(DB)",
    ],
    chest: [
      "바벨 벤치프레스",
      "인클라인 벤치프레스",
      "덤벨 벤치프레스",
      "인클라인 덤벨 프레스",
      "디클라인 벤치프레스",
      "웨이티드 푸쉬업",
      "딥스(어시스트 적게)",
      "스미스 벤치프레스(중량)",
      "펙덱 플라이(중량)",
      "케이블 크로스오버(중량)",
      "클로즈그립 벤치프레스(중량)",
      "플로어 프레스",
    ],
    legs: [
      "백 스쿼트(중량)",
      "프론트 스쿼트(중량)",
      "RDL(중량)",
      "레그프레스(중량)",
      "워킹 런지",
      "불가리안 스플릿 스쿼트",
      "핵 스쿼트(머신)",
      "레그 익스텐션(중량)",
      "라잉 레그컬(중량)",
      "바벨 힙 쓰러스트",
      "굿모닝(가벼운 중량)",
      "시티드 카프레이즈(중량)",
    ],
    arm: [
      "바벨 컬",
      "이지바 컬(EZ-Bar Curl)",
      "인클라인 덤벨 컬",
      "프리쳐 컬(EZ)",
      "자트맨 컬",
      "리버스 컬(중량)",
      "클로즈그립 벤치프레스(중량)",
      "스컬크러셔(EZ)",
      "트라이셉스 로프 푸쉬다운(중량)",
      "오버헤드 EZ 익스텐션",
      "벤치 딥스",
      "V바 프레스다운",
    ],
  },
  hard: {
    back: [
      "웨이티드 풀업",
      "웨이티드 친업",
      "데드리프트(헤비)",
      "데피싯 데드리프트",
      "펜들레이 로우(헤비)",
      "바벨 로우(헤비)",
      "티바 로우(헤비)",
      "씰 로우(헤비)",
      "메도우즈 로우(헤비)",
      "랙풀(헤비)",
      "스내치그립 데드리프트",
      "체스트 서포티드 로우(헤비)",
    ],
    shoulder: [
      "스트릭트 프레스(헤비)",
      "푸시 프레스(헤비)",
      "시티드 바벨 프레스(헤비)",
      "Z 프레스(헤비)",
      "레터럴 레이즈(헤비 파셜)",
      "업라이트 로우(헤비)",
      "아놀드 프레스(헤비)",
      "랜드마인 프레스(헤비)",
      "핸드스탠드 푸쉬업",
      "덤벨 프레스(헤비)",
      "머신 숄더 프레스(스택)",
      "스내치그립 하이풀",
    ],
    chest: [
      "벤치프레스(헤비)",
      "포즈드 벤치프레스",
      "스포토 프레스",
      "클로즈그립 벤치(헤비)",
      "인클라인 벤치(헤비)",
      "덤벨 프레스(헤비)",
      "웨이티드 딥스(헤비)",
      "디피싯 푸쉬업(중량)",
      "라슨 프레스",
      "머신 프레스(스택)",
      "디클라인 벤치(헤비)",
      "원암 덤벨 프레스(헤비)",
    ],
    legs: [
      "백 스쿼트(헤비)",
      "프론트 스쿼트(헤비)",
      "포즈드 스쿼트",
      "박스 스쿼트(헤비)",
      "핵 스쿼트(헤비)",
      "루마니안 데드리프트(헤비)",
      "수모 데드리프트(헤비)",
      "바벨 런지(헤비)",
      "불가리안 스플릿 스쿼트(헤비)",
      "노르딕 컬",
      "힙 쓰러스트(헤비)",
      "워킹 런지(헤비)",
    ],
    arm: [
      "바벨 컬(헤비)",
      "치트 컬(주의)",
      "프리쳐 컬(헤비)",
      "원암 덤벨 컬(헤비)",
      "인클라인 컬(스트릭트, 헤비)",
      "클로즈그립 벤치(헤비)",
      "웨이티드 딥스",
      "스컬크러셔(헤비)",
      "JM 프레스",
      "오버헤드 DB 익스텐션(헤비)",
      "리버스 컬(헤비)",
      "케이블 푸쉬다운(스택)",
    ],
  },
};

// 평탄화해서 id 포함한 SEED 생성
const SEED = (Object.keys(RAW) as Difficulty[]).flatMap((diff) =>
  (Object.keys(RAW[diff]) as Group[]).flatMap((grp) =>
    RAW[diff][grp].map((title) => ({
      id: `${slug(title)}-${grp}-${diff}`,
      title,
      group: grp,
      difficulty: diff,
    }))
  )
);

/** 누락분 upsert */
let seeded = false;
async function ensureSeed(force = false) {
  if (seeded && !force) return;
  const ops = SEED.map((doc) => ({
    updateOne: {
      filter: { id: doc.id },
      update: { $setOnInsert: doc },
      upsert: true,
    },
  }));
  await Workout.bulkWrite(ops, { ordered: false });
  seeded = true;
}

/** 목록 조회
 *  GET /api/workouts?group=back&difficulty=mid&q=로우
 */
r.get("/", async (req, res) => {
  await ensureSeed();
  const { group, difficulty, q } = req.query as any;
  const cond: any = {};
  if (group) cond.group = group;
  if (difficulty) cond.difficulty = difficulty;
  if (q) cond.title = new RegExp(String(q), "i");

  const list = await Workout.find(cond).lean();
  res.json(list.map(({ _id, ...rest }) => rest)); // _id 숨김
});

/** 개발용 강제 리시드
 *  POST /api/workouts/seed
 */
r.post("/seed", async (_req, res) => {
  await ensureSeed(true);
  res.json({ ok: true, insertedOrKept: SEED.length });
});

export default r;
